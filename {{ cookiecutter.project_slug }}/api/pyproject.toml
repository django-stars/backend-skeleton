[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version.lower() }}"
Celery = "*"
Django = "*"
django-environ = "*"
django-filter = "*"
djangorestframework = "*"
drf-spectacular = "*"
gunicorn = "*"
psycopg = { version = "*", extras = ["binary", "pool"] }
redis = "*"
sentry-sdk = "*"
django-storages = "*"
boto3 = "^1.26"

[tool.poetry.group.dev.dependencies]
Pygments = "*"
bandit = "*"
ruff = "*"
coverage = { version = "*", extras = ["toml"] }
django-debug-toolbar = "*"
django-extensions = "*"
Werkzeug = "*"
ipdb = "*"
ipython = "*"
model-bakery = "*"
pytest-django = "*"
pytest-mock = "*"
pytest = "*"
safety = "*"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{ cookiecutter.project_slug }}.settings"
python_files = ["tests.py", "test_*.py", "*_test.py"]

[tool.ruff]
line-length = 120
target-version = "py{{ cookiecutter.python_version.lower().replace('.', '') }}"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Docstrings
    "D",
    # Assert statement
    "S101",
    # Unnecessary-assign before return
    "RET504",
    # Random for non cryptographically secure
    "S311",
    # Formatter related rules...
    "COM812", "ISC001",
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S"]
"tests.py" = ["S"]
"*_test.py" = ["S"]
"*/migrations/*" = ["RUF012"]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2
known-first-party=["{{ cookiecutter.project_slug }}"]
section-order= ["future", "standard-library", "third-party", "django", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
"django" = ["django"]

[tool.coverage.run]
omit = [
    "*migrations*",
    "*tests*",
    "/usr/*",
    "*/env/*",
    "*/urls.py",
    "{{ cookiecutter.project_slug }}/fixtures/*",
    "{{ cookiecutter.project_slug }}/apps/accounts/api/authentication.py",
    "{{ cookiecutter.project_slug }}/apps/common/management/commands/generate_secretkey.py",
    "{{ cookiecutter.project_slug }}/apps/common/management/commands/startapp.py",
    "{{ cookiecutter.project_slug }}/apps/common/utils/redis.py",
    "{{ cookiecutter.project_slug }}/loggers.py",
    "{{ cookiecutter.project_slug }}/wsgi.py",
    "*/admin.py",
]
[tool.coverage.report]
exclude_lines =[
    "noqa",
    "pragma: no cover",
    "def __unicode__",
    "def __repr__",
    "def __str__",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "assert",
]
show_missing = true

[tool.codespell]
skip = "*.lock"
ignore-words = "codespell-ignore-words.txt"
